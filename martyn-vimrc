let mapleader=","
set nocompatible
set history=1000
set hidden
set bs=2
set viminfo='500,\"500
set tabstop=2
set nowritebackup tildeop magic ignorecase smartcase showmatch

set wildignore=*.o,*.class,.git,target/**,bin/**


syntax on
filetype plugin indent on
:helptags ~/.vim/doc
map <silent> <F3> :call BufferList() <CR>

runtime! macros/matchit.vim
set hlsearch
set incsearch
set shortmess=atI

set wildmode=list:longest

" switch windows
nmap <silent> <A-Up> :wincmd k<CR>
nmap <silent> <A-Down> :wincmd j<CR>
nmap <silent> <A-Left> :wincmd h<CR>
nmap <silent> <A-Right> :wincmd l<CR>

nmap <silent> <C-S-f> \G

" tabs
nmap <silent> <C-S-tab> :tabprevious<CR>
nmap <silent> <C-tab> :tabnext<CR>
map <C-S-tab> :tabprevious<CR>
map <S-tab> :tabnext<CR>
imap <C-S-tab> <ESC>:tabprevious<CR>i
imap <S-tab> <ESC>:tabnext<CR>i
"nmap <silent> <C-t> :tabnew<CR>
imap <C-S-t> <ESC>:tabnew<CR> 

" fuzzy finder
"
"noremap <C-t> :FufFile **/<CR>

" Ctrl P
noremap <C-t> :CtrlP <CR>
let g:ctrlp_max_files = 100000

" autoindent with two spaces, always expand tabs
set nu ai sw=2 sts=2 expandtab

au! BufRead,BufNewFile *.haml         setfiletype haml
au! BufRead,BufNewFile *.ftl         setfiletype ftl

colorscheme ron
set ts=2
nnoremap <F2> :set invpaste paste?<CR>
set pastetoggle=<F2>
set showmode

func Eatchar(pat)
  let c = nr2char(getchar(0))
  return (c =~ a:pat) ? '' : c
endfunc

" just type cl<space>  to get console.log('<cursor stays here');
ia cl console.log('');<Left><Left><Left><C-R>=Eatchar('\s')<CR>

"let g:ctrlp_map = '<c-.>'
